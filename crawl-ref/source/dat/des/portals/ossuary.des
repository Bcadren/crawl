##############################################################################
#
# The Ossuary, a Tomb en miniature (Zaba)
#
#
# The Ossuary tries to pose an unusual early challenge: many traps and slow
# monsters, making the player choose between pressing on towards the loot or
# leaving the vault.
#
# Flavour: Mini versions of Tomb and otherwise crypt like.
#
##############################################################################

{{
function ossuary_setup_features(e)
  if you.in_branch("D") then
    e.kmons("4 = scorpion")
	e.kmons("5 = wraith")
    if you.depth() < 6 then
      e.kmons("1 = guardian mummy")
	else 
      e.kmons("1 = mummy priest")
    end
  elseif you.in_branch("Lair") or you.in_branch("Orc") then
    e.kmons("1 = mummy priest")
    e.kmons("4 = redback")
	e.kmons("5 = eidolon")
  else
    e.kmons("1 = mummy priest")
	e.kmons("4 = emperor scorpion")
	e.kmons("5 = revenant")
  end
  e.tags("no_monster_gen")
  e.ftile(".'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()|~{}+- = floor_sandstone")
  e.tile("c = wall_tomb")
  e.kmons("0 = guardian mummy")
  e.kmons("2 = zombie")
  e.kmons("3 = skeleton")
  e.kfeat("GHI = sarcophagus")
  e.kfeat("J = granite_statue")
  e.tile("G = DNGN_SARCOPHAGUS_SEALED")
  e.tile("H = DNGN_SARCOPHAGUS_PEDESTAL_RIGHT")
  e.tile("I = DNGN_SARCOPHAGUS_PEDESTAL_LEFT")
end

function callback.badplayer_boxes_open_up(data, triggerable, triggerer, marker,
                                          ev)
  if not data.triggered then
    data.triggered = true
    for slave in iter.slave_iterator("disappearing_wall", 1) do
      dgn.terrain_changed(slave.x, slave.y, "floor", false)
    end
    crawl.mpr("There is a click, and some walls slide away!", 'warning')
  end
end
}}

#### Portal entry vaults.
default-depth: D:2

NAME:   enter_ossuary_1
TAGS:   transparent extra uniq_miniossuary
NSUBST: . = 1:1 / 4:2 / *:p
SUBST:  ' = ~..
KFEAT:  ~ = alarm trap / dispersal trap / net trap
CLEAR:  p
: ossuary_setup_features(_G)
MAP
JJJJJ
.....
.'''.
.'}'.
.'''.
.....
GGGGG
ENDMAP

NAME:    enter_ossuary_2
TAGS:    transparent extra uniq_miniossuary
SUBST:   . = zzz.
SUBST:   r = ...z
NSUBST:  ' = 2:~ / 1:1 / *:p
SUBST:   p = 234..
CLEAR:   z
KFEAT:   ~ = alarm trap / dispersal trap
: ossuary_setup_features(_G)
MAP
 rrrrr
.rGrGr.
.rrrrr.
.cc+cc.
.c'''c.
.c'}'c.
.c'''c.
.ccccc.
.......
ENDMAP

NAME:   enter_ossuary_3
TAGS:   transparent extra uniq_miniossuary
SUBST:  . = ' .
MONS:   rat zombie / jackal zombie / worm zombie
MONS:   kobold zombie / goblin zombie / hobgoblin zombie
MONS:   orc zombie / gnoll zombie / human zombie
SUBST:  . = .:100 11 2 3
: ossuary_setup_features(_G)
MAP
...
.}.
...
ENDMAP

NAME:   enter_ossuary_4
TAGS:   transparent extra uniq_miniossuary
COLOUR: 1 = yellow, x = white
MONS:   rat zombie / quokka zombie / goblin zombie
FTILE:  1 = floor_sandstone, x = floor_sandstone, O = floor_sandstone
: ossuary_setup_features(_G)
MAP
.........
.ccccccc.
.c''}''c.
.c'''''c.
.c'c'c'c.
.c1c'c1c.
.ccc'ccc.
....'....
ENDMAP

NAME:   enter_ossuary_5
TAGS:   transparent extra uniq_miniossuary
COLOUR: c = white, + = white, ' = yellow
: ossuary_setup_features(_G)
MAP
   ...
  ..c..
 ..cc+..
..cc'cc..
.cc'}'cc.
..cc'cc..
 ..ccc..
  ..c..
   ...
ENDMAP

NAME:   gup_ossuary_entry_pyramid
TAGS:   transparent extra uniq_miniossuary
KMONS:  O = mummy
: ossuary_setup_features(_G)
MAP
     ...
    ..c..
   ..ccc..
  ..cc}cc..
 ..cc...cc..
..cc.....cc..
.ccccc+ccccc.
.............
ENDMAP

NAME: nicolae_ossuary_entry_catacombs
TAGS:  extra uniq_miniossuary
COLOUR: 1s = yellow
NSUBST: A = + / c, B = + / c, C = + / c, s = 1:} / 4:1 / *:1.....
KMONS: O1 = orc skeleton / orc zombie w:5 / elf skeleton / elf zombie w:5 / \
            human skeleton / human zombie w:5
: ossuary_setup_features(_G)
MAP
ccccccccc
+'1'csAsc
ccc+c+cAc
cs+'''+sc
ccc'''ccc
cs+'''+sc
cCc+c+cBc
csCscsBsc
ccccccccc
ENDMAP

NAME: nicolae_ossuary_entry_false_entrances
TAGS: extra uniq_miniossuary
NSUBST: O = } / d
SHUFFLE: AB/AB/AB/BA
SUBST: A = m, B = c
: ossuary_setup_features(_G)
MAP
   xxxxx
 +ccccccc+
 c'''c'''c
xc'O'A'O'cx
xc'''B'''cx
xccABBBAccx
xc'''B'''cx
xc'O'A'O'cx
 c'''c'''c
 +ccccccc+
   xxxxx
ENDMAP

NAME: nicolae_ossuary_entry_giza
TAGS: transparent extra uniq_miniossuary
NSUBST: M = 1:} / *:z
KMONS: O = mummy
KMONS: z = goblin zombie / hobgoblin zombie / kobold zombie / orc zombie
FTILE: Oz = floor_sandstone
COLOUR: z = yellow
: ossuary_setup_features(_G)
MAP
          .
         ...
        ..c..
       ..ccc..
      ..ccMcc..
     ..ccc+ccc..
    ..c.......c..
   ..ccc.....ccc..
  ..ccMcc...ccMcc..
 ..ccc+ccc.ccc+ccc..
.....................
ENDMAP

NAME: nicolae_ossuary_entry_monument
TAGS: transparent extra uniq_miniossuary
FTILE: G = floor_sandstone
SUBST: - = '.
: ossuary_setup_features(_G)
MAP
..G..
.'''.
G'O'G
.'''.
..G..
ENDMAP

NAME: nicolae_ossuary_entry_plus
TAGS: transparent  extra uniq_miniossuary
: if crawl.coinflip() then
SUBST: Dd = +, o = }, p = '
: else
SUBST: d = +, D = c, o = '
NSUBST: p = } / '
: end
FTILE: + = floor_sandstone
: ossuary_setup_features(_G)
MAP
.........
...cDc...
..'cpc'..
.ccc'ccc.
.Dp'o''d.
.ccc'ccc.
..'cpc'..
...cDc...
.........
ENDMAP

NAME: nicolae_ossuary_entry_ruins
TAGS: transparent extra uniq_miniossuary
FTILE: GO = floor_sandstone
SUBST: c = -c, - = ''., ^ = '..
: ossuary_setup_features(_G)
MAP
.......
.cc-cc.
.c---c.
.--}--.
.c---c.
.cc-cc.
.......
ENDMAP

NAME: lightli_ossuary_entry_decrepit_ruins
TAGS: transparent ruin extra uniq_miniossuary
NSUBST: a = 1:' / *:c
: ossuary_setup_features(_G)
MAP
GcccccG
cc'}'cc
caaaaac
c'''''c
c'''''c
cc'''cc
Gcc'ccG
   @
ENDMAP

NAME: chequers_ossuary_entry_cave
TAGS: transparent extra uniq_miniossuary
: ossuary_setup_features(_G)
MAP
 ccccccc
cc'''''cc
cG''}''Gc
cc'''''cc
 ccc'ccc
   c'c
   cAc
   @@@
ENDMAP

#### The portal vaults ####################################

# Reset default depth to prevent random generation of portal vaults.
# Sort destination maps by WEIGHT.
default-depth: D:2

###########################################################
# Common: WEIGHT 40
###########################################################

NAME:    ossuary_tomb_1
WEIGHT:  40
TAGS:    uniq_ossuary
KMASK:   ' = no_item_gen
SHUFFLE: dwyz
SHUFFLE: WYZ
SUBST:   w=2, y=2
NSUBST:  z= 1:1 / *:3
SUBST:   . = '''.
CLEAR:   .
KFEAT:   T = alarm trap / floor
# loot: 12.5 items
ITEM:    any scroll w:2 / any scroll q:2 w:3 / \
         any potion w:4 / any potion q:2 w:6
: ossuary_setup_features(_G)
MAP
..cccccccccccccc..
..c.22*c'''cdddc..
..c1cccc'''cdddc..
..c''''''''+cccc..
..cccccc'''''''c..
..c'zzzc'''2'''c..
..c'cz}c.3'''3'c..
..c'cccc'''2'''c..
..c''''''''''''c..
..c'ccccTTcccc'c..
..c'cy}cTTc}wc'c..
..c'yyycTTcwww'c..
..ccccccTTcccccc..
......''''''......
    ..'G''G'..
    ....@@....
ENDMAP

NAME:    ossuary_tomb_2
# Generally have rooms full of either monsters or traps.
WEIGHT:  40
TAGS:    transparent uniq_ossuary
KFEAT:   ~ = arrow trap w:2 / needle trap
KFEAT:   ^ = arrow trap / floor w:5
# Number of 1's is 53, number of ~'s is 57.
: if crawl.one_chance_in(10) then
SUBST:   ~ = 3
SUBST:   3 = 3:20 2:10 ~:50 .:30
: else
SHUFFLE: 3~
SUBST:   3 = 3:20 2:10 .:20
SUBST:   ~ = ~:20 .:10
:end
SUBST:   z = 1
NSUBST:  B = 1:+ / *:c
NSUBST:  C = 1:+ / *:c
NSUBST:  D = 1:+ / *:c
NSUBST:  E = 1:+ / *:c
NSUBST:  F = 1:+ / *:c
NSUBST:  G = 1:+ / *:c
NSUBST:  H = 1:+ / *:c
NSUBST:  I = 1:+ / *:c
NSUBST:  J = 1:+ / *:c
NSUBST:  K = 1:+ / *:c
SUBST: ' = '''.
CLEAR: '
# loot: 12 items
ITEM:    any scroll w:6 / any potion / any potion q:2 w:2
: ossuary_setup_features(_G)
MAP
ccccccccccccccccccccc
c333H~~~G333F~~~E333c
c333H~~~G333F~~~E333c
c333H~~~G333F~~~E333c
cIIIcccccccccccccDDDc
c~~~c}'''''''''}c~~~c
c~~~c'''''''''''c~~~c
c~~~c'''1'''1'''c~~~c
c~~~c'''''''''''c~~~c
cJJJc'''''''''''cCCCc
c333c'1'''}'''1'c333c
c333c'''''''''''c333c
c333c'''''''''''c333c
c333c'''1'''1'''c333c
cKKKc'''''''''''cBBBc
c~~~c'''''''''''c^^^c
c~~~c+++ccccccccc^^^c
c~~~c...cdddc...c.z^c
c~~~+1d1+***q...+.^^c
c~~~c...cdddc...c.z^c
ccccccccccqqc+++ccccc
             .@.
ENDMAP

NAME:    ossuary_tomb_3
WEIGHT:  40
TAGS:    uniq_ossuary
# zombies should be awake, so they march downwards in a line

NSUBST:  l = 2:l / .
CLEAR:   l
KFEAT:   HI = granite_statue
KFEAT:   f = altar_yredelemnul
ITEM:    nothing / any scroll w:5 / any potion
: ossuary_setup_features(_G)
MAP
   ccccccccccccccc
  cc.....1}1.....cc
 cc..0...ccc...0..cc
 c......ccfcc......c
 c.....cc...cc.....c
 c......1...1......c
 cc..3..0.G.0..3..cc
  cc.............cc
   c+cc.......cc+c
  cc..cc22222cc..cc
 cc..3.cc.G.cc.3..cc
ccd....Hc...cI...3dcc
c$dd3..Hc.3.cI...dd$c
c$dd...Hc...cI...dd$c
c$$d.3.Hc.G.cI.3.d$$c
cc$dd..Hc...cI..dd$cc
 c$$d..cc.3.cc..d$$c
 cc$d.}cc...cc}.d$cc
  c$d.ccl.G.lcc.d$c
  cccccll.@.llccccc
ENDMAP

###########################################################
# Rare: WEIGHT 20
###########################################################

NAME:    minmay_ossuary_two_tombs
WEIGHT:  20
TAGS:    uniq_ossuary
# Loot: between 5 scrolls/potions and 9 scrolls/potions, with some gold.
# The tomb close to the player is a bit easier than the other one, and is
# more likely to be the one with less loot, giving weak players a chance.
SHUFFLE: def$
NSUBST:  d = 1:1 / *:d
NSUBST:  e = 1:1 / *:e
NSUBST:  $ = 1:1 / *:$
SUBST:   2 = 2 3:1 .:1
SUBST:   3 = 3 2:1 .:1
SUBST:   . = 23..
SUBST:   ' = 23.''
CLEAR:   'm
ITEM:    any scroll, any potion
: ossuary_setup_features(_G)
MAP
    '''''''''''
  ''''cccccccc''''
 ''cccc3223+ecccc''
 'cc.......ceec2cc'
 'c}.ccccc.cccc.+@ 
 'cc.+dddc.....2cc'
 ''ccccddc...cccc''
  ''''cccccccc''''
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmm
  ''''cccccccc''''
 ''cccc3+ffc3cccc''
 'cc2.2.cccc.c$$cc'
  @+.........+$$}c'
 'cc2.2.cccc.c$$cc'
 ''cccc3+ffc3cccc''
  ''''cccccccc''''
    ''''''''''''
ENDMAP

NAME:    ossuary_crypta
WEIGHT:  20
TAGS:    uniq_ossuary
# mix of good items with useless ones
ITEM:    scroll of random uselessness w:20 / scroll of immolation / \
         scroll of bless item / \
         potion of mutation w:5 / potion of ambrosia w:5 / \
         potion of degeneration / potion of lignification / \
         potion of curing w:15
# and sometimes mostly useless ones
ITEM:    scroll of attention / scroll of random uselessness w:20 / \
         scroll of immolation / potion of mutation w:5 / \
         potion of degeneration w:40
# occasionally just use this
ITEM:    any potion / any scroll w:5 / nothing
SHUFFLE: hjkl
SUBST:   h:d, j:e, k:de, l:.de
NSUBST:  f = 6:f / *:e
NSUBST:  d = 2:M / *:d
NSUBST:  e = 2:M / *:e
SUBST:   M = 1f, d = dddf, e = eeef
NSUBST:  . = 6:^ / *:.
KFEAT:   ^ = alarm trap / floor w:20
: ossuary_setup_features(_G)
MAP
          vvv
        vvv1vvv
 ccccc vvfffffvv ccccc
 clllc vfff1fffv chhhc
 clllc vvvv^vvvv chhhc
 cc^cc    c^c    cc^cc
ccc.c   ccc+ccc   c.ccc
c2+.cc cc.....cc cc.+2c
ccc..ccc.......ccc..ccc
c2+...c.........c...+2c
ccc...+....Y....+...ccc
c2+...c.........c...+2c
ccc..ccc.......ccc..ccc
c2+.cc cc.....cc cc.+2c
ccc.c   ccc+ccc   c.ccc
 cc^cc    c.c    cc^cc
 ckkkc   cc.cc   cjjjc
 ckkkc   c...c   cjjjc
 ccccc   c.@.c   ccccc
         c...c
ENDMAP

# Scorpions, and lots of them. Hope you weren't expecting to breeze through
# the ossuary just because you found a mace of holy wrath!
NAME:   minmay_ossuary_scorpions_multiroom
TAGS:   uniq_ossuary
WEIGHT: 20
KFEAT:  ~ = needle trap / arrow trap / spear trap w:5
KITEM:  1 = *
SUBST:  4 = 44.
SUBST:  2 = 233.
SUBST: ' = '..
CLEAR: '
: ossuary_setup_features(_G)
MAP
ccccccccccccc
c4.1c4.2c2.4c
c...+...G...c
c2.1c2.....2c
cc+cccG.1.Gcc
c~~~c2.....2c
c~~~c...G...c
c~~~c4.2c2.4c
cc+ccccccc+cc
c424cd*dq~~~c'
c2}2+d1dq~~~c'
c424cd*dq~~~c''
ccccccccc+++c'''
     ''''@@@''''
      ''''''''''
       ''''''''
        ''''''
ENDMAP

NAME:   minmay_ossuary_scorpions_large_arena
TAGS:   uniq_ossuary
WEIGHT: 20
KFEAT:  ~ = needle trap / arrow trap / spear trap w:5
KITEM:  1 = *
SUBST:  4 = 44.
SUBST:  2 = 233.
SUBST: ' = '..
CLEAR: '
: ossuary_setup_features(_G)
MAP
   ccccccccccccccccc
   c4...2c4...4qdddc
   c.....c.....qd1dc
   c...........qdddc
   c...........cc+cc
   c2....4....2c424c
   cccG.414.Gccc2}2c
   c2....4....4c424c
  'c...........cc+cc
 ''c.....G.....c~~~c
 ''c.....c.....+~~~c
'''c2...2c4...4c~~~c
'''cc+++cccccccccccc
'''''@@@'''''''
'''''''''''''
''''''''''''
ENDMAP

# Another ossuary (loosely) based on Tomb:2
NAME:    ossuary_minmay_tomb_2a
WEIGHT:  20
TAGS:    transparent uniq_ossuary
MONS:    rat zombie / jackal zombie / goblin zombie / hobgoblin zombie / \
         adder zombie / gnoll zombie / orc zombie / kobold zombie / \
         big kobold zombie / hound zombie / human zombie / elf zombie
MONS:    mummy
ITEM:    any scroll / any scroll q:2, any potion / any potion q:2
SHUFFLE: $de*
NSUBST:  B = 1:+ / *:n
NSUBST:  C = 1:+ / *:n
NSUBST:  D = 1:+ / *:n
NSUBST:  E = 1:+ / *:n
NSUBST:  X = 1:< / *:.
: ossuary_setup_features(_G)
MAP
ccccccccccccccccccccccccccccccc
c$$B.......................Cddc
c$$B.......................Cddc
cBBB.........ccccc.........CCCc
c.............................c
c....2.........1.........2....c
c.....cc....1.....1....cc.....c
c.....cc...............cc.....c
c.........1.........1.........c
c..c.......................c..c
+..cc..........X..........cc..+
+..cc....1....X{X....1....cc..+
+..cc..........X..........cc..+
c..c.......................c..c
c.........1.........1.........c
c.............................c
c.....cc....1.....1....cc.....c
c.....cc.......1.......cc.....c
c....2...................2....c
c.............................c
cEEE.........ccccc.........DDDc
c**E.......................Deec
c**E.......................Deec
ccccccccccccccccccccccccccccccc
ENDMAP

NAME:    ossuary_zaba_flooded
WEIGHT:  20
TAGS:    no_exits uniq_ossuary
{{
local flood_x, flood_y, n = -1, -1, 0

-- Find where to start the flood.
for x = 0, width() - 1 do
    for y = 0, height() - 1 do
        if mapgrd[x][y] == '.' then
            n = n + 1
            if crawl.one_chance_in(n) then
                flood_x, flood_y = x, y
            end
        end
    end
end

-- Flood it!
flood(flood_x, flood_y, crawl.random_range(6, 16), function(x, y, distance)
    local c = mapgrd[x][y]

    local replacements = {
        ['.'] = { {'.', 1}, {'W', 2} },
        ['x'] = { {'x', 5}, {'w', 5} },
        ['c'] = { {'c', 5}, {'w', 3}, {'W', 2}, {'x', 1} },
        ['+'] = { {'+', 10}, {'W', 5} },
        ['1'] = { {'2', 1} }
    }

    if replacements[c] then
        mapgrd[x][y] = util.random_choose_weighted(replacements[c])
    end

    if c == '+' or c == 'v' then
        return 0
    end

    return distance - 1
end)

}}
SHUFFLE: ABI/CDJ/EFK/GHL
SUBST:   A : ., B : A, I : <
SUBST:   EFKGHL : d
SUBST:   CDJ = 1112
MONS:    generate_awake zombie place:D:6 /\
         w:5 generate_awake mummy
MONS:    w:15 withered plant /\
         mummy \
         spells:throw_frost.18.wizard;slow.27.wizard \
         name:bog n_adj col:green/\
         w:5 nothing
ITEM:    any potion / any scroll / any jewellery w:1
: ossuary_setup_features(_G)
: lrockcol('brown')
MAP
      xxxxxxxxxxxxxxx
   xxxxxxxxxxxxxxxxxxxxx
  xxxxxxxxxxxxxxxxxxxxxxx
 xxxxxxxxxxxxxxxxxxxxxxxxx
 xxxxxcccccccccccccccxxxxx
 xxxxxc1c1c1c1c1c1c1cxxxxx
xxxxccc+c+c+c+c+c+c+cccxxxx
xxxxc1+.............+1cxxxx
xxxxccc.vv+vv+vv+vv.cccxxxx
xxxxc1+.vAAAv1vCCCv.+1cxxxx
xxxxccc.vABAvvvCDCv.cccxxxx
xxxxc1+.vAAIv1vJCCv.+1cxxxx
xxxxccc.vvvvv+vvvvv.cccxxxx
xxxxc1+.............+1cxxxx
xxxxccc.vvvvv+vvvvv.cccxxxx
xxxxc1+.vEEKv1vLGGv.+1cxxxx
xxxxccc.vEFEvvvGHGv.cccxxxx
xxxxc1+.vEEEv1vGGGv.+1cxxxx
xxxxccc.vv+vv+vv+vv.cccxxxx
xxxxc1+.............+1cxxxx
xxxxccc+c+c+c+c+c+c+cccxxxx
 xxxxxc1c1c1c1c1c1c1cxxxxx
 xxxxxcccccccccccccccxxxxx
 xxxxxxxxxxxxxxxxxxxxxxxxx
  xxxxxxxxxxxxxxxxxxxxxxx
   xxxxxxxxxxxxxxxxxxxxx
      xxxxxxxxxxxxxxx
ENDMAP

###########################################################
# Very rare: WEIGHT 10
###########################################################

# Players have two choices: they can try to hang back and slowly fight the
# undead, or they can run to the gold relying on their speed/stealth.
#
# The former option is difficult since there's no choke point, whereas the
# latter option is inherently risky.  Gold averages a bit less than 200.
#
# Originally this vault had the monsters behind doors and an alarm trap
# before the gold, but then I found out that zombies can't open doors anymore.
NAME:   minmay_ossuary_gauntlet
WEIGHT: 10
TAGS:   uniq_ossuary
SUBST:  ' = '''''..
CLEAR:  '
NSUBST: 1 = 4:1 / *:2
: ossuary_setup_features(_G)
MAP
       '''''''''''
    ''''''''''''''''
  '''''''''''''''''''''''''
  '''ccccccccccccccccc'''ccccc
 ''''c1H1H1H1H1H1H1H1cccccHHHcc 
'''''@................$$$$$$$Gc
'''''@...G...G...G...G$$$G$}$Gc
'''''@................$$$$$$$Gc
 ''''c1I1I1I1I1I1I1I1cccccIIIcc
  '''ccccccccccccccccc'''ccccc
  '''''''''''''''''''''''''
    ''''''''''''''''''
       '''''''''''''
ENDMAP

NAME:    ossuary_the_hunt_dpeg
WEIGHT:  10
TAGS:   uniq_ossuary
# loot: 8 items of which 6 should be good.
# Most of the loot helps right here, if need be.
ITEM:    potion of curing / potion of heal wounds / potion of haste / \
         potion of ambrosia w:5 / potion of mutation w:5 / \
         scroll of teleportation w:5 / \
         scroll of blinking w:5 / scroll of holy word / \
         scroll of random uselessness
SUBST:   M = 111.
KFEAT:   ~ = net trap / alarm trap / dispersal trap w:5 / floor w:100
KFEAT:   ^ = net trap w:20 / dispersal trap w:5 / floor w:25
: ossuary_setup_features(_G)
MAP
           ccccccccccccccccccccc
 ccccccccccc2c2c2c2c2c2c2ccddddccc
cc1.....1.~~~~~~~~~~~~~~~~^....M}c
@.........~~~~~~~~~~~~~~~~^....M}c
cc1.....1.~~~~~~~~~~~~~~~~^....M}c
 ccccccccccc2c2c2c2c2c2c2ccddddccc
           ccccccccccccccccccccc
ENDMAP

NAME:    ossuary_due_mausoleum
WEIGHT:  10
TAGS:   uniq_ossuary
NSUBST:  = = 1:+ / *:c
SUBST:  . = ~3....
SUBST:  ' = .''''
KFEAT:  ~ = net trap / alarm trap / dispersal trap w:5
CLEAR:  '
ITEM:    any scroll / any potion
: ossuary_setup_features(_G)
MAP
      '''     '''
    '''''''@'''''''
   '''ccccc+ccccc'''
  '''cc.........cc'''
 '''cc...cc=cc...cc'''
'''cc...cm.d.mc...cc'''
 ''c...cm.ddd.mc...c''
  @+...=.dd5dd.=...+@
 ''c...cm.ddd.mc...c''
'''cc...cm.}.mc...cc'''
 '''cc...cc=cc...cc'''
   ''cc.........cc''
    ''c..c+++c..c''
     'cccc333cccc'
      cdd+...+ddc    
      cddc222cddc
      cccc222cccc    
         c222c      
         c.1.c     
         c...c    
         c.}.c    
         c...c    
        cc+++cc    
       cc4...4cc    
      cc*.....*cc    
     cc|..111..|cc    
      cc*.....*cc     
       cc4.}.4cc     
        ccccccc
ENDMAP

# INDY: Oh, rats! ... He hates rats. He's scared to death of 'em.
NAME:    ossuary_due_small_catacomb
WEIGHT:  10
TAGS:   uniq_ossuary
ITEM:    any scroll / any potion
MONS:    kobold skeleton / goblin skeleton / gnoll skeleton / \
         orc skeleton
MONS:    mummy
# Loot: 10-19
# Some random content.
SHUFFLE: Bb/Zz, Dd/Ww, Ee/Vv
SUBST:   Z=c, z=c, W=c, w=c, V=c, v=c
SUBST:   B=X, D=X, E=X
NSUBST:  b = 1:+ / c
NSUBST:  d = 1:+ / c
NSUBST:  e = 1:+ / c
SUBST:   X = x2
# Guaranteed 10 items and 10 mummies, two in hidden rooms.
# 50/50 chance of loot for each of the eleven rats in the rat room.
KITEM:   x = any scroll / any potion
KMONS:   x = mummy
NSUBST:  ' = 10:^ / *:.
KFEAT:   ^ = arrow trap
KITEM:   y = any scroll w:5 / any potion w:5 / nothing w:10
KMONS:   y = rat skeleton
: ossuary_setup_features(_G)
MAP
           ccc
         cccxccccc
       ccc.'''+''c      cccccc
      cc.'.ccccc'c     cc.+.1cc
     cc1.ccc  cc+cc   cc..cc..cc
    cc..cc   cc...ccccc..cccc..ccc
    cc+cc    c+.x.+.1''.cc  cc.'.cc
 @ccc...cc  ccb...cccxccc   cecc'cc
 @.+..1.+c  cBcc+cc ccc   cceEec+cc
 @ccc...cc  ccb..cc   cccccxccc...ccc
    cc+cc   cc..+cccccc.'+''''+.x.+Xc
     c.cc  cc1.cc'cdDd.1ccccccc...ccc
     c1cc cc..cccc'cdd.cc     cc+cc
     c..cccc+cc  cc'cc+cc      cXc
     cc..cc...cccccc+yyyccccc  ccc
      cc.+..x..+'''+yyyyy+.1cc
       cccc...cccxcccyyyccc..cc
          cc+cc ccc cc+cc cc..ccccc
           cxc       ccc   cc.''+Xc
           ccc              ccccccc
ENDMAP

# Menkaure's pyramid
NAME:    ossuary_due_pyramid
WEIGHT:  10
TAGS:    no_rotate no_vmirror transparent uniq_ossuary
# Loot: 1-16 items
ITEM:    any scroll / any potion / w:5 nothing
KFEAT:   ^ = arrow trap w:20 / alarm trap
KFEAT:   m = spear trap
KFEAT:   ~ = alarm trap
NSUBST:  ' = 3:m / 30:2 / 30:3 / 30:^ / .
SUBST:    X : c
SUBST:    C = ccccpp.@
SUBST:   ` = .pp
CLEAR:    p
: ossuary_setup_features(_G)
MAP
                      ````
                     ``````
                    ````````
                   ````CC````
                  ````CCCC````
                 ````CCccCC````
                ````CC''''CC````
               ````CC''cc''CC````
              ````CC''cccc''CC````
             ````CC''cccccc''CC````
            ````CC''cc''''cc''CC````
           ````CC''cc''cc''cc''CC````
          ````CC''cc''cccc''cc''CC````
         ````CC''cc''ccGdcc''cc''CC````
        ````CC''cc''ccGdddcc''cc''CC````
       ````CC''cc''ccG1dd1dcc''cc''CC````
      ````CC''cc''ccG^d}dd..cc''cc''CC````
     ````CC''cc''ccG^d1dd1^'^cc''cc''CC````
    ````CC''cc''ccG^d^ddd^'~'~cc''cc''CC````
   ````CC''cc''cccccccccccccc''cc''cc''CC````
  ````CC''cc''''''''''''''''''''cc''cc''CC````
 ````CC''cccccccccccccccccccccccccc''cc''CC````
````CC''''''''''''''''''''''''''''''''cc''CC````
````CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC````
 ````CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC````
   ````````````````````````````````````````````
      `````````````````````````````````````
          `````````````````````````````
ENDMAP

NAME:   ossuary_zaba_two_paths
# There is no way up in the end. This is to give the zombies in the beginning
# more time to go for a walk and another chance to meet the player.
WEIGHT: 10
TAGS:   no_item_gen no_monster_gen no_rotate uniq_ossuary
#
# Standard monsters: small zombies, large zombies, boss:
MONS:   kobold zombie / goblin zombie / orc zombie / hobgoblin zombie
MONS:   big kobold zombie / gnoll zombie
MONS:   mummy
#
KFEAT:  F = floor
COLOUR: F = cyan
KMONS:  F = rat simulacrum / goblin simulacrum / kobold simulacrum /\
            bat simulacrum / nothing w:80
KFEAT:  S = floor
COLOUR: S = green
KMONS:  S = spectral rat / spectral goblin / spectral kobold /\
            spectral bat / nothing w:80
# Loot.
ITEM:   any potion / any scroll / nothing w:1
#
# There are not always traps in corridors but they are guaranteed near the loot:
KFEAT:  ' = arrow trap w:8 / alarm trap w:7 / floor w:85
KFEAT:  " = spear trap w:1 / net trap w:3 / arrow trap w:15
#
: ossuary_setup_features(_G)
MAP
ccccccccccccccccccccccccccc
c2c2c2cc...........cc2c2c2c
c+c+c+c.............c+c+c+c
c..........G...G..........c
c.........................c
c+c+ccccccccc+ccccccccc+c+c
bScc'ccG2+.......+2Gcc'ccFv
bSScc'ccGc.......cGcc'ccFFv
bSSScc'ccc.12321.ccc'ccFFFv
bSSSScc'cc.......cc'ccFFFFv
bSSSSScc'c.......c'ccFFFFFv
bSSSSSS+'c...G...c'+FFFFFFv
bSSSSScc'c.......c'ccFFFFFv
bSSSScc'cc.""""".cc'ccFFFFv
bSSScc'ccc."ddd".ccc'ccFFFv
bSScc'ccGc."ddd".cGcc'ccFFv
bScc'ccG2+."ddd".+2Gcc'ccFv
ccc+ccccccccccccccccccc+ccc
c11111cc1c1c1c1c1c1cc11111c
c......c+c+c+c+c+c+c......c
c.........................c
c.........................c
cccccccccccc@@@cccccccccccc
ENDMAP

# A larger ossuary than usual: there is a corridor with some monsters (and
# chances of wights) to get past, and then a little treasure room at the end.
#
# A door in the treasure room leads to another corridor flanked with a wraith
# (a hint of what's to come) on one side, and a flying skull on the other:
# the flying skull is basically an intelligent alarm trap, both behind glass.
#
# At the end of the corridor is a second treasure room, this one also
# containing more flying skeleton alarm traps, plus wraiths inside 3x3 rooms.
#
NAME:    ossuary_due_cavern
WEIGHT:  10
TAGS:    uniq_ossuary
MONS:    centaur zombie w:1 / orc zombie / hobgoblin zombie /\
         kobold zombie / adder zombie / orc skeleton / hobgoblin skeleton /\
         ball python skeleton / nothing w:5
MONS:    wight
MONS:    flying skull
MONS:    wraith
ITEM:    any scroll / any potion
ITEM:    any scroll / any potion / any wand w:4
KMONS:   V = wraith
KMONS:   X = flying skull
SUBST:   x = c:20 n:8
SUBST:   z = c:20 n:4
SUBST:   y = c:20 n:1
SUBST:   $ = 1:10 2:1
NSUBST:  4 = 2:4 / *:2
: ossuary_setup_features(_G)
MAP
   cc@@@cc
    cc.ccc
     cc.cc
     cc.cc
     cc.cc
    cc.cc
   cc.cc                            ccccccccccccccccc
   cc..ccc                          c...............c
    cc...cc                         c.+cc..xxx..cc+.c
  ccc...ccc                 ccccccccc.c4c..x3x..c4c.c
 cc......cccccccccccccccccccccccqqqcc.ccc..yzy..ccc.c
cc........cc$c$c$c$c$cc.....ccccqVqcc...............c
c..........c+c+c+c+c+cc.GdG.ccccqqqcc.cxy..eee..yxx.c
c..c.......+..........+..d....+.....+.c3z..eee..z3x.c
cc.cc......c+c+c+c+c+cc.GdG.ccccnnncc.cxy..eee..yxx.c
cc.c......cc$c$c$c$c$cc.....ccccnXncc...............c
cc.cc....cccccccccccccccccccccccnnncc.ccc..yzy..ccc.c
 cc.....cc                  ccccccccc.c4c..x3x..c4c.c
  cc...cc                           c.+cc..xxx..cc+.c
   ccccc                            c...............c
                                    ccccccccccccccccc
ENDMAP


# Four chambers, one with loot and the exit, three with zombies and a mummy.
# (The player won't know which is which because Crawl rotates the vault.)
#
# Stealthy players can close the doors without the mummy noticing. This is
# probably okay, but may turn out to be too easy.... -- dpeg
NAME:   ossuary_minmay_four_chambers
WEIGHT: 10
TAGS:   uniq_ossuary
MONS:   human zombie / elf zombie / centaur zombie
MONS:   mummy
ITEM:   any scroll / any potion / any scroll q:2 w:2 / any potion q:2 w:2
: ossuary_setup_features(_G)
MAP
            ccc
          cccdccc
         ccdddddcc
         c..ddd..c
         c...d...c
         c.......c
         cc.....cc
          ccc.ccc
            c+c
  ccccc   @@c.c@@   ccccc
 cc1.1cc c@.....@c cc1.1cc
 c.....c c.......c c.....c
cc.....ccc.......ccc.....cc
c2......+.........+......2c
cc.....ccc.......ccc.....cc
 c.....c c.......c c.....c
 cc1.1cc c@.....@c cc1.1cc
  ccccc   @@c.c@@   ccccc
            c+c
          ccc.ccc
         cc.....cc
         c1.....1c
         c.......c
         c1.....1c
         cc.....cc
          ccc2ccc
            ccc
ENDMAP

# The intent is that the mummies chase the player through the whole ossuary,
# forcing the player to either move quickly or soak up some death curses.
NAME:   ossuary_minmay_chase
WEIGHT: 10
TAGS:   uniq_ossuary
MONS:   rat zombie / quokka zombie / adder zombie /\
        goblin zombie / hobgoblin zombie / kobold zombie / gnoll zombie w:2 /\
        big kobold zombie w:1 / human zombie w:1 / elf zombie w:1 / orc zombie w:1
MONS:   generate_awake mummy
ITEM:   any scroll / any potion / gold w:4
KFEAT:  ~ = arrow trap / needle trap
: ossuary_setup_features(_G)
MAP
ccccc     ccc ccc ccc
cdddccccccc1ccc1ccc1ccccccc
cddd~~~~c.............c~~~c
cd<d~~<~+.............+~<~c
cddd~~~~c.............c~~~c
cdddccccccc1ccc1ccc1cccc+cc
ccccc     ccc ccc ccc c...c
                     cc...cc
                     c1...1c
                     cc...cc
                      c...c
                     cc...cc
                     c1...1c
                     cc...cc
                      c...c
                     cc...cc
                     c1...1c
                     cc...cc
cccc @@@  ccc ccc ccc c...c
c2.cc+++ccc1ccc1ccc1cccc+cc
cc......+.............c~~~c
c2......+.............+~<~c
cc......+.............c~~~c
c2.cc+++ccc1ccc1ccc1ccccccc
cccc @@@  ccc ccc ccc
ENDMAP

NAME:   ossuary_boxes_badplayer
WEIGHT: 10
TAGS:   uniq_ossuary
MONS:   rat zombie / quokka zombie / adder zombie /\
        goblin zombie / hobgoblin zombie / kobold zombie / gnoll zombie w:2 /\
        big kobold zombie w:1 / human zombie w:1 / elf zombie w:1 / orc zombie w:1
MONS:   mummy
MONS:   ogre zombie w:45 / centaur zombie w:50 / troll zombie w:5
KMONS:  N  = mummy
KMONS:  O  = Menkaure w:5 / mummy, mummy
KFEAT:  N  = $
KFEAT:  O  = exit_portal_vault
KFEAT:  ab = stone_wall
KITEM:  $  = any scroll w:49 / any potion w:49 / any wand w:1 / any ring w:1
NSUBST: `  = 2:2 / *:.
NSUBST: 1  = 25:1 / *:. , 3 = 5:3 / *:.
NSUBST: a  = 1:+ / *:a , B = 1:+ / *:c , C = 1:+ / *:c , D = 1:+ / *:c
NSUBST: E  = 1:+ / *:c , F = 1:+ / *:c , G = 1:+ / *:c , H = 1:+ / *:c
NSUBST: I  = 1:+ / *:c , J = 1:+ / *:c , K = 1:+ / *:c , L = 1:+ / *:c
NSUBST: M  = 1:+ / *:c
{{
lua_marker(":", Triggerable.synchronized_markers(
  function_at_spot( "callback.badplayer_boxes_open_up",
                    { triggered = false }, true,
                    { only_at_slave = true, listen_to_slaves = true })))

lua_marker('ab', props_marker {disappearing_wall = 1})
}}
: ossuary_setup_features(_G)
MAP
`````````````````````````````
`````````````````````````````
``ccccc+ccc+ccc+ccc+ccc+ccc``
``c111c111c111c111c111c111c``
``c1cGcGGccHHHcIIIccJJcJc1c``
``+1G....c....c....c....J1c``
``ccc....c....c....c....ccc``
``c1G....c....c....c....J1+``
``c1G...3b3...c3...b3...J1c``
``+1ccccbbaaaacaaaabbcccc1c``
``ccc....a:::::::::a....ccc``
``c1F....a:.......:a....K1+``
``c1F....a:..$$$..:a....K1c``
``+1F3...a:.$$N$$.:a3...K1c``
``cccccccc:.$NON$.:cccccccc``
``c1E....a:.$$N$$.:a....L1+``
``c1E....a:..$$$..:a....L1c``
``+1E....a:.......:a....L1c``
``ccc3...a:::::::::a3...ccc``
``c1ccccbbaaaacaaaabbcccc1+``
``c1D....b....c....b....M1c``
``+1D....c....c....c....M1c``
``ccc....c....c....c....ccc``
``c1D3...c3...c3...c3...M1+``
``c1cDcDDccCCCcBBBccMMcMc1c``
``c111c111c111c111c111c111c``
``ccc+ccc+ccc+ccc+ccc+ccccc``
`````````````````````````````
`````````````````````````````
ENDMAP

NAME:   ossuary_kennysheep_city_of_the_dead
WEIGHT: 10
TAGS:   no_exits uniq_ossuary
KMONS:  1W = wraith
KMONS:  2 = mummy
KMONS:  3 = goblin zombie / hobgoblin zombie / kobold zombie / gnoll zombie w:2 /\
        big kobold zombie w:1 / human zombie w:1 / elf zombie w:1 / orc zombie w:1 /\
                nothing w:36
KITEM:  12d = any potion / any scroll / any jewellery w:1
KFEAT:  . = needle trap / arrow trap / spear trap w:5 / floor w:600
NSUBST: d = 1:1 / 3:2 / 4:. / *:d
: ossuary_setup_features(_G)
MAP
ccccccccccccccccccccccccccccc
c...........................c
c...........................c
c..xxx..xxx..xxx..xxx..xxx..c
c..xdx..xdx..xdx..xdx..xdx..c
c..x+x..x+x..x+x..x+x..x+x..c
c..x.x..x.x..x.x..x.x..x.x..c
c...........................c
c...........................c
c..xxxx..3...xxx...3..xxxx..c
c..xd+..3G3..xdx..3G3..+dx..c
c..xxxx..3...x+x...3..xxxx..c
c............x.x............c
c...........................c
c..xxxx.xxxx..3..xxxx.xxxx..c
c..xd+..xd+..3G3..+dx..+dx..c
c..xxxx.xxxx..3..xxxx.xxxx..c
c...........................c
c............x.x............c
c..xxxx..3...x+x...3..xxxx..c
c..xd+..3G3..xdx..3G3..+dx..c
c..xxxx..3...xxx...3..xxxx..c
c...........................c
c...........................c
c..x.x..x.x..x.x..x.x..x.x..c
c..x+x..x+x..x+x..x+x..x+x..c
c..xdx..xdx..xdx..xdx..xdx..c
c..xxx..xxx..xxx..xxx..xxx..c
c...........................c
c...........................c
ccccccccccccc+++ccccccccccccc
           cc...cc
          cc.....cc
       cccc.......cccc
       cWn.........nWc
       cccc.......cccc
          @@.....@@
           @c...c@
            ccncc
             cWc
             ccc
ENDMAP
